Goals:
  ☐ When opening the app, check to see if the is already logged in, if not log them in anonymously @created(03-12-19 16:07)
  ☐ After the account status check, fetch the users @created(03-07-19 12:31)
  ☐ Ability to create new users and save them to Firebase @created(03-07-19 12:32)
  ☐ User has the ability to convert their anonymous account to a perminant account @created(03-07-19 12:32)
  If the account is anonymous:
    ✔ Upon closing the app and reopening it, data should be persistant @created(03-07-19 12:33) @done(03-12-19 16:06)
    ✔ When deleting the app and reinstalling it, data should be gone @created(03-07-19 12:33) @done(03-12-19 16:06)
    ✔ Data is not accessible from other devices @created(03-07-19 12:34) @done(03-12-19 16:06)
  If the account is perminant:
    ☐ Upon closing the app and reopening it, data should be persistant @created(03-07-19 12:34)
    ☐ When deleting the app and reinstalling it, logging in, the user should then see their data @created(03-07-19 12:34)
    ☐ If they create data under an anonymous account, but also have data under a perminant account and switch the data, proper logic should be handled @created(03-07-19 12:36)
Todo:
  ✔ Log user in anonymously @created(03-07-19 12:26) @done(03-07-19 13:37)
  ☐ Create an interface that can be used with SQLite or Mongodb @created(03-07-19 12:25)
      methods:  
        ✔ userCreate @created(03-07-19 12:26) @done(03-07-19 20:32)
          ~ POST method
        ☐ userSave @created(03-07-19 12:27)
          ~ PUT method
        ☐ userDelete @created(03-07-19 12:27) @low
          ~ DELETE method
        ✔ usersFetch @created(03-07-19 12:28) @done(03-07-19 20:32)
          ~ GET method
          ~ Fetches all users
  ✔ Add API Key to .env config @created(03-07-19 12:37) @done(03-07-19 13:04)
  ✔ Each account should be unique and should contain its own set of user data @created(03-07-19 13:39) @done(03-08-19 14:44)
  ✔ Auto populate data @created(03-08-19 14:58) @done(03-08-19 15:47)
 ✔ Add router @created(03-08-19 15:51) @done(03-12-19 13:43)
 ✔ Create Tab Bar @created(03-08-19 15:51) @done(03-12-19 13:43)
      ~ https://medium.com/@ian.mundy/using-react-native-router-flux-with-redux-9b10be35cd37
  ✔ Create an Account screen @created(03-08-19 15:44) @done(03-12-19 15:05)
    ✔ Login Form @created(03-08-19 15:44) @done(03-12-19 16:33)
    ✔ Button to update account @created(03-08-19 15:44) @done(03-12-19 16:33)
    ☐ Button to sign out @created(03-08-19 15:44)
      ~ If account is a perminant account they should not be able to sign in as anonymous, or they can but shoudn't see data from linked account
    ✔ Convert anonymous account to a perminant account @created(03-07-19 12:30) @done(03-13-19 15:08)
      ~ https://firebase.google.com/docs/auth/web/anonymous-auth
    ✔ Link account @created(03-12-19 16:00) @done(03-12-19 20:54)
    `~ https://firebase.google.com/docs/auth/web/account-linking
    ~  When converting (or signing in) to a perminant account check if the data is more new, if so merge/use perminant data
    ✔ Setup auth persistance @created(03-12-19 16:24) @done(03-13-19 16:06)
      ~ https://firebase.google.com/docs/auth/web/auth-state-persistence
      ~ If the user has already logged in they should not have to login again and it should not sign them in anonymously
  ✔ Move Employee List to a new Screen @created(03-08-19 15:42) @done(03-12-19 13:42)
  ☐ Clean up Views, make them more logical @created(03-13-19 16:54)